@inject LanguageSelector LanguageSelector
@inject NavigationManager NavigationManager

<header class="w-full text-white bg-gray-100 mb-8 border-b-2 border-@Colors.Primary">
    <div class="flex flex-row items-center justify-between py-2 md:py-3 px-4 md:px-8 ">
        <div class="flex flex-row items-center justify-between">
            <NavLink class="flex items-center"
                     href="" Match="NavLinkMatch.All">
                <img src="img/logos/blue.png" class="w-8 h-8 mr-2" alt="Logo">
                <strong class="uppercase text-@Colors.Primary hover:text-@Colors.PrimaryDarker tracking-widest text-2xl">Celebrity</strong>
            </NavLink>
        </div>
        <nav class="text-sm flex justify-end items-center flex-row space-x-2">
            <div class="flex space-x-2 items-center">
                <label class="hidden sm:inline-flex font-semibold text-sm text-@Colors.TextMuted">
                    Language: 
                </label>
                <button @onclick="SetEnglish" type="button" class="@styles[0]">
                    EN
                </button>
                <button @onclick="SetSpanish" type="button" class="@styles[1]">
                    ES
                </button>
            </div>
        </nav>
    </div>
</header>


@code {

    private bool showMenu = false;
    private CultureInfo currentCulture;
    private string[] styles = new string[2];
    private string buttonStyle = " px-1 py-0.5 border rounded";

    protected override async Task OnInitializedAsync()
    {
        currentCulture = await LanguageSelector.GetCurrentCulture();
        UpdateStyles();
    }

    private async Task SetEnglish() 
    {
        currentCulture = await LanguageSelector.SetCurrentCulture("en-US");
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private async Task SetSpanish() 
    {
        currentCulture = await LanguageSelector.SetCurrentCulture("es-ES");
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private string GetStyle(CultureInfo cultureInfo) 
    {
        Console.WriteLine(cultureInfo.DisplayName);
        Console.WriteLine(currentCulture.DisplayName);
        return cultureInfo.DisplayName.Equals(currentCulture.DisplayName) ? Styles.Button + buttonStyle : Styles.ButtonOutlined + buttonStyle;
    }

    private void UpdateStyles()
    {
        styles = new string[]
        {
            GetStyle(new CultureInfo("en-US")),
            GetStyle(new CultureInfo("es-ES"))
        };
    }
}

