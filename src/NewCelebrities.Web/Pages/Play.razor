@page "/play"

@inject NewCelebrities.Web.Services.GameCreator gameCreator

<div class="container mx-auto max-w-2xl">

    @if (game is not null)
    {
        if (game.ShowRoundStart)
        {
            <RoundStartSummary Round="game.RoundContext.CurrentRound" OnRoundSummaryClosed="() => game.StartTeamPreparation()" />
        }
        if (game.ShowTeamPreparation)
        {
            <div class="flex flex-col space-y-4">
                <h2>@game.CurrentTeam</h2>
                <div>
                    Prepare yourselfs...
                </div>
                <CustomButton OnClick="() => game.StartGuessing()" AdditionalStyles="w-full" Height="CustomButton.ButtonHeight.Standard">
                    <svg class="w-8 h-8" fill="none" stroke="currentColor"
                 viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z">
                        </path>
                    </svg>
                </CustomButton>
            </div>
        }
        if (game.WeAreGusessing)
        {
            <div class="flex flex-col space-y-4">
                <div class="flex justify-between">
                    <div>
                        Team
                    </div>

                    <div>
                        <TimerAlarm @ref="timeAlarm" TimesUp="() => game.OnTimesUp()" Seconds="5"></TimerAlarm>
                    </div>
                </div>

                <CharacterCard Character="game.Deck.VisibleItem.Character" />
                <div class="flex justify-between space-x-4">
                    <CustomButton OnClick="() => game.GuessVisibleItem()" AdditionalStyles="w-full" Height="CustomButton.ButtonHeight.Standard">
                        <svg class="w-8 h-8" fill="none" stroke="currentColor"
                     viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z">
                            </path>
                        </svg>
                    </CustomButton>

                    <CustomButton OnClick="() => game.SkipToNextItem()" AdditionalStyles="w-full" Height="CustomButton.ButtonHeight.Standard">

                        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.933 12.8a1 1 0 000-1.6L6.6 7.2A1 1 0 005 8v8a1 1 0 001.6.8l5.333-4zM19.933 12.8a1 1 0 000-1.6l-5.333-4A1 1 0 0013 8v8a1 1 0 001.6.8l5.333-4z">

                            </path>
                        </svg>

                    </CustomButton>

                </div>
            </div>
        }

        if (game.ShowTurnEnd)
        {
            <div class="flex flex-col space-y-4">
                <h2>@game.CurrentTeam</h2>
                <div>
                    @game.TurnContext.LastTurnSummary();
                </div>
                <CustomButton OnClick="() => game.EndTurn()" AdditionalStyles="w-full" Height="CustomButton.ButtonHeight.Standard">
                    <svg class="w-8 h-8" fill="none" stroke="currentColor"
                 viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z">
                        </path>
                    </svg>
                </CustomButton>
            </div>
        }

        if (game.ShowRoundEnd)
        {
            <div class="flex flex-col space-y-4">
                <h2>@game.RoundContext.CurrentRound</h2>
                <div>
                    @game.TurnContext.LastTurnSummary();
                </div>
                <CustomButton OnClick="() => game.EndRound()" AdditionalStyles="w-full" Height="CustomButton.ButtonHeight.Standard">
                    <svg class="w-8 h-8" fill="none" stroke="currentColor"
                 viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z">
                        </path>
                    </svg>
                </CustomButton>
            </div>
        }

        if (game.ShowGameEnd)
        {
            <div class="flex flex-col space-y-4">
                <h2>End of game</h2>
                <div>
                    WINNER: @game.TurnContext.Winner();
                </div>
                <CustomButton OnClick="PlayAgain" AdditionalStyles="w-full" Height="CustomButton.ButtonHeight.Standard">
                    <svg class="w-8 h-8" fill="none" stroke="currentColor"
                 viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z">
                        </path>
                    </svg>
                </CustomButton>
            </div>
        }

    }
    else
    {
        <label>Preparing game..</label>
    }
</div>

@code {
    private TimerAlarm timeAlarm;
    private NewCelebrities.Core.Game game;

    protected override async Task OnInitializedAsync()
    {
        game = await gameCreator.Create(1, 10,
            NewCelebrities.Core.Color.Bluemoon,
            NewCelebrities.Core.Color.Greenfindor);
    }

    private void PlayAgain()
    {
        game = game.Reset();
    }
}
